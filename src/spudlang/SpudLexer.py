# Generated from Spud.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\34")
        buf.write("\u0191\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\3\2\3\2\3\3\3\3\3\3\3")
        buf.write("\4\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t")
        buf.write("\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3")
        buf.write("\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r")
        buf.write("\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22")
        buf.write("\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\5\27")
        buf.write("\u00ad\n\27\3\30\3\30\3\31\3\31\3\32\3\32\5\32\u00b5\n")
        buf.write("\32\3\33\7\33\u00b8\n\33\f\33\16\33\u00bb\13\33\3\33\3")
        buf.write("\33\7\33\u00bf\n\33\f\33\16\33\u00c2\13\33\3\34\3\34\3")
        buf.write("\34\7\34\u00c7\n\34\f\34\16\34\u00ca\13\34\3\35\7\35\u00cd")
        buf.write("\n\35\f\35\16\35\u00d0\13\35\3\35\3\35\3\35\3\36\3\36")
        buf.write("\5\36\u00d7\n\36\3\37\3\37\7\37\u00db\n\37\f\37\16\37")
        buf.write("\u00de\13\37\3\37\3\37\7\37\u00e2\n\37\f\37\16\37\u00e5")
        buf.write("\13\37\3\37\3\37\3 \3 \6 \u00eb\n \r \16 \u00ec\3 \3 ")
        buf.write("\3!\3!\5!\u00f3\n!\3\"\3\"\3#\3#\3$\3$\3$\5$\u00fc\n$")
        buf.write("\3%\5%\u00ff\n%\3%\3%\5%\u0103\n%\3%\3%\5%\u0107\n%\7")
        buf.write("%\u0109\n%\f%\16%\u010c\13%\3&\7&\u010f\n&\f&\16&\u0112")
        buf.write("\13&\3&\3&\7&\u0116\n&\f&\16&\u0119\13&\3\'\6\'\u011c")
        buf.write("\n\'\r\'\16\'\u011d\3\'\3\'\3\'\3\'\3\'\5\'\u0125\n\'")
        buf.write("\3\'\6\'\u0128\n\'\r\'\16\'\u0129\3(\6(\u012d\n(\r(\16")
        buf.write("(\u012e\3(\3(\3(\3(\3(\5(\u0136\n(\3(\6(\u0139\n(\r(\16")
        buf.write("(\u013a\3(\3(\6(\u013f\n(\r(\16(\u0140\5(\u0143\n(\3(")
        buf.write("\3(\3(\3(\3(\3(\5(\u014b\n(\3(\6(\u014e\n(\r(\16(\u014f")
        buf.write("\3(\3(\3(\3(\6(\u0156\n(\r(\16(\u0157\5(\u015a\n(\3)\6")
        buf.write(")\u015d\n)\r)\16)\u015e\3)\3)\3)\3)\3)\5)\u0166\n)\3)")
        buf.write("\6)\u0169\n)\r)\16)\u016a\3)\3)\6)\u016f\n)\r)\16)\u0170")
        buf.write("\5)\u0173\n)\3)\3)\3)\3)\3)\3)\3)\3)\3)\5)\u017e\n)\3")
        buf.write(")\6)\u0181\n)\r)\16)\u0182\3)\3)\3)\3)\6)\u0189\n)\r)")
        buf.write("\16)\u018a\5)\u018d\n)\3*\5*\u0190\n*\2\2+\3\3\5\4\7\5")
        buf.write("\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35")
        buf.write("\20\37\21!\22#\23%\2\'\2)\2+\2-\2/\2\61\2\63\2\65\2\67")
        buf.write("\29\2;\2=\2?\2A\2C\24E\25G\26I\27K\30M\31O\32Q\33S\34")
        buf.write("\3\2\b\4\2\13\13\"\"\4\2\f\f\17\17\3\2C\\\3\2c|\3\2\63")
        buf.write(";\4\2\13\13\"\u0080\2\u01a9\2\3\3\2\2\2\2\5\3\2\2\2\2")
        buf.write("\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3")
        buf.write("\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2")
        buf.write("\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2")
        buf.write("\2\2!\3\2\2\2\2#\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2")
        buf.write("\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3")
        buf.write("\2\2\2\2S\3\2\2\2\3U\3\2\2\2\5W\3\2\2\2\7Z\3\2\2\2\t]")
        buf.write("\3\2\2\2\13`\3\2\2\2\rb\3\2\2\2\17d\3\2\2\2\21f\3\2\2")
        buf.write("\2\23h\3\2\2\2\25j\3\2\2\2\27r\3\2\2\2\31x\3\2\2\2\33")
        buf.write("\u0082\3\2\2\2\35\u0087\3\2\2\2\37\u008d\3\2\2\2!\u0094")
        buf.write("\3\2\2\2#\u009d\3\2\2\2%\u00a2\3\2\2\2\'\u00a4\3\2\2\2")
        buf.write(")\u00a6\3\2\2\2+\u00a8\3\2\2\2-\u00ac\3\2\2\2/\u00ae\3")
        buf.write("\2\2\2\61\u00b0\3\2\2\2\63\u00b4\3\2\2\2\65\u00b9\3\2")
        buf.write("\2\2\67\u00c3\3\2\2\29\u00ce\3\2\2\2;\u00d6\3\2\2\2=\u00d8")
        buf.write("\3\2\2\2?\u00e8\3\2\2\2A\u00f2\3\2\2\2C\u00f4\3\2\2\2")
        buf.write("E\u00f6\3\2\2\2G\u00fb\3\2\2\2I\u00fe\3\2\2\2K\u0110\3")
        buf.write("\2\2\2M\u011b\3\2\2\2O\u012c\3\2\2\2Q\u015c\3\2\2\2S\u018f")
        buf.write("\3\2\2\2UV\7%\2\2V\4\3\2\2\2WX\7\61\2\2XY\7\61\2\2Y\6")
        buf.write("\3\2\2\2Z[\7\61\2\2[\\\7,\2\2\\\b\3\2\2\2]^\7,\2\2^_\7")
        buf.write("\61\2\2_\n\3\2\2\2`a\7-\2\2a\f\3\2\2\2bc\7/\2\2c\16\3")
        buf.write("\2\2\2de\7&\2\2e\20\3\2\2\2fg\7\60\2\2g\22\3\2\2\2hi\7")
        buf.write("#\2\2i\24\3\2\2\2jk\7B\2\2kl\7k\2\2lm\7o\2\2mn\7r\2\2")
        buf.write("no\7q\2\2op\7t\2\2pq\7v\2\2q\26\3\2\2\2rs\7B\2\2st\7j")
        buf.write("\2\2tu\7q\2\2uv\7n\2\2vw\7f\2\2w\30\3\2\2\2xy\7B\2\2y")
        buf.write("z\7j\2\2z{\7q\2\2{|\7n\2\2|}\7f\2\2}~\7w\2\2~\177\7p\2")
        buf.write("\2\177\u0080\7k\2\2\u0080\u0081\7v\2\2\u0081\32\3\2\2")
        buf.write("\2\u0082\u0083\7B\2\2\u0083\u0084\7f\2\2\u0084\u0085\7")
        buf.write("g\2\2\u0085\u0086\7e\2\2\u0086\34\3\2\2\2\u0087\u0088")
        buf.write("\7B\2\2\u0088\u0089\7h\2\2\u0089\u008a\7t\2\2\u008a\u008b")
        buf.write("\7c\2\2\u008b\u008c\7e\2\2\u008c\36\3\2\2\2\u008d\u008e")
        buf.write("\7B\2\2\u008e\u008f\7d\2\2\u008f\u0090\7g\2\2\u0090\u0091")
        buf.write("\7i\2\2\u0091\u0092\7k\2\2\u0092\u0093\7p\2\2\u0093 \3")
        buf.write("\2\2\2\u0094\u0095\7o\2\2\u0095\u0096\7w\2\2\u0096\u0097")
        buf.write("\7n\2\2\u0097\u0098\7v\2\2\u0098\u0099\7k\2\2\u0099\u009a")
        buf.write("\7r\2\2\u009a\u009b\7n\2\2\u009b\u009c\7{\2\2\u009c\"")
        buf.write("\3\2\2\2\u009d\u009e\7B\2\2\u009e\u009f\7g\2\2\u009f\u00a0")
        buf.write("\7p\2\2\u00a0\u00a1\7f\2\2\u00a1$\3\2\2\2\u00a2\u00a3")
        buf.write("\t\2\2\2\u00a3&\3\2\2\2\u00a4\u00a5\t\3\2\2\u00a5(\3\2")
        buf.write("\2\2\u00a6\u00a7\t\4\2\2\u00a7*\3\2\2\2\u00a8\u00a9\t")
        buf.write("\5\2\2\u00a9,\3\2\2\2\u00aa\u00ad\5)\25\2\u00ab\u00ad")
        buf.write("\5+\26\2\u00ac\u00aa\3\2\2\2\u00ac\u00ab\3\2\2\2\u00ad")
        buf.write(".\3\2\2\2\u00ae\u00af\7\62\2\2\u00af\60\3\2\2\2\u00b0")
        buf.write("\u00b1\t\6\2\2\u00b1\62\3\2\2\2\u00b2\u00b5\5/\30\2\u00b3")
        buf.write("\u00b5\5\61\31\2\u00b4\u00b2\3\2\2\2\u00b4\u00b3\3\2\2")
        buf.write("\2\u00b5\64\3\2\2\2\u00b6\u00b8\5/\30\2\u00b7\u00b6\3")
        buf.write("\2\2\2\u00b8\u00bb\3\2\2\2\u00b9\u00b7\3\2\2\2\u00b9\u00ba")
        buf.write("\3\2\2\2\u00ba\u00bc\3\2\2\2\u00bb\u00b9\3\2\2\2\u00bc")
        buf.write("\u00c0\5\61\31\2\u00bd\u00bf\5\63\32\2\u00be\u00bd\3\2")
        buf.write("\2\2\u00bf\u00c2\3\2\2\2\u00c0\u00be\3\2\2\2\u00c0\u00c1")
        buf.write("\3\2\2\2\u00c1\66\3\2\2\2\u00c2\u00c0\3\2\2\2\u00c3\u00c4")
        buf.write("\5\65\33\2\u00c4\u00c8\7\60\2\2\u00c5\u00c7\5\63\32\2")
        buf.write("\u00c6\u00c5\3\2\2\2\u00c7\u00ca\3\2\2\2\u00c8\u00c6\3")
        buf.write("\2\2\2\u00c8\u00c9\3\2\2\2\u00c98\3\2\2\2\u00ca\u00c8")
        buf.write("\3\2\2\2\u00cb\u00cd\5/\30\2\u00cc\u00cb\3\2\2\2\u00cd")
        buf.write("\u00d0\3\2\2\2\u00ce\u00cc\3\2\2\2\u00ce\u00cf\3\2\2\2")
        buf.write("\u00cf\u00d1\3\2\2\2\u00d0\u00ce\3\2\2\2\u00d1\u00d2\7")
        buf.write("\60\2\2\u00d2\u00d3\5\65\33\2\u00d3:\3\2\2\2\u00d4\u00d7")
        buf.write("\5\67\34\2\u00d5\u00d7\59\35\2\u00d6\u00d4\3\2\2\2\u00d6")
        buf.write("\u00d5\3\2\2\2\u00d7<\3\2\2\2\u00d8\u00dc\5\65\33\2\u00d9")
        buf.write("\u00db\5%\23\2\u00da\u00d9\3\2\2\2\u00db\u00de\3\2\2\2")
        buf.write("\u00dc\u00da\3\2\2\2\u00dc\u00dd\3\2\2\2\u00dd\u00df\3")
        buf.write("\2\2\2\u00de\u00dc\3\2\2\2\u00df\u00e3\7\61\2\2\u00e0")
        buf.write("\u00e2\5%\23\2\u00e1\u00e0\3\2\2\2\u00e2\u00e5\3\2\2\2")
        buf.write("\u00e3\u00e1\3\2\2\2\u00e3\u00e4\3\2\2\2\u00e4\u00e6\3")
        buf.write("\2\2\2\u00e5\u00e3\3\2\2\2\u00e6\u00e7\5\65\33\2\u00e7")
        buf.write(">\3\2\2\2\u00e8\u00ea\5\65\33\2\u00e9\u00eb\5%\23\2\u00ea")
        buf.write("\u00e9\3\2\2\2\u00eb\u00ec\3\2\2\2\u00ec\u00ea\3\2\2\2")
        buf.write("\u00ec\u00ed\3\2\2\2\u00ed\u00ee\3\2\2\2\u00ee\u00ef\5")
        buf.write("=\37\2\u00ef@\3\2\2\2\u00f0\u00f3\5=\37\2\u00f1\u00f3")
        buf.write("\5? \2\u00f2\u00f0\3\2\2\2\u00f2\u00f1\3\2\2\2\u00f3B")
        buf.write("\3\2\2\2\u00f4\u00f5\5%\23\2\u00f5D\3\2\2\2\u00f6\u00f7")
        buf.write("\5\'\24\2\u00f7F\3\2\2\2\u00f8\u00fc\5\65\33\2\u00f9\u00fc")
        buf.write("\5;\36\2\u00fa\u00fc\5A!\2\u00fb\u00f8\3\2\2\2\u00fb\u00f9")
        buf.write("\3\2\2\2\u00fb\u00fa\3\2\2\2\u00fcH\3\2\2\2\u00fd\u00ff")
        buf.write("\7a\2\2\u00fe\u00fd\3\2\2\2\u00fe\u00ff\3\2\2\2\u00ff")
        buf.write("\u0100\3\2\2\2\u0100\u010a\5-\27\2\u0101\u0103\7a\2\2")
        buf.write("\u0102\u0101\3\2\2\2\u0102\u0103\3\2\2\2\u0103\u0106\3")
        buf.write("\2\2\2\u0104\u0107\5-\27\2\u0105\u0107\5\63\32\2\u0106")
        buf.write("\u0104\3\2\2\2\u0106\u0105\3\2\2\2\u0107\u0109\3\2\2\2")
        buf.write("\u0108\u0102\3\2\2\2\u0109\u010c\3\2\2\2\u010a\u0108\3")
        buf.write("\2\2\2\u010a\u010b\3\2\2\2\u010bJ\3\2\2\2\u010c\u010a")
        buf.write("\3\2\2\2\u010d\u010f\5%\23\2\u010e\u010d\3\2\2\2\u010f")
        buf.write("\u0112\3\2\2\2\u0110\u010e\3\2\2\2\u0110\u0111\3\2\2\2")
        buf.write("\u0111\u0113\3\2\2\2\u0112\u0110\3\2\2\2\u0113\u0117\7")
        buf.write("(\2\2\u0114\u0116\5%\23\2\u0115\u0114\3\2\2\2\u0116\u0119")
        buf.write("\3\2\2\2\u0117\u0115\3\2\2\2\u0117\u0118\3\2\2\2\u0118")
        buf.write("L\3\2\2\2\u0119\u0117\3\2\2\2\u011a\u011c\5%\23\2\u011b")
        buf.write("\u011a\3\2\2\2\u011c\u011d\3\2\2\2\u011d\u011b\3\2\2\2")
        buf.write("\u011d\u011e\3\2\2\2\u011e\u0124\3\2\2\2\u011f\u0120\7")
        buf.write("k\2\2\u0120\u0125\7u\2\2\u0121\u0122\7c\2\2\u0122\u0123")
        buf.write("\7t\2\2\u0123\u0125\7g\2\2\u0124\u011f\3\2\2\2\u0124\u0121")
        buf.write("\3\2\2\2\u0125\u0127\3\2\2\2\u0126\u0128\5%\23\2\u0127")
        buf.write("\u0126\3\2\2\2\u0128\u0129\3\2\2\2\u0129\u0127\3\2\2\2")
        buf.write("\u0129\u012a\3\2\2\2\u012aN\3\2\2\2\u012b\u012d\5%\23")
        buf.write("\2\u012c\u012b\3\2\2\2\u012d\u012e\3\2\2\2\u012e\u012c")
        buf.write("\3\2\2\2\u012e\u012f\3\2\2\2\u012f\u0135\3\2\2\2\u0130")
        buf.write("\u0131\7k\2\2\u0131\u0136\7u\2\2\u0132\u0133\7c\2\2\u0133")
        buf.write("\u0134\7t\2\2\u0134\u0136\7g\2\2\u0135\u0130\3\2\2\2\u0135")
        buf.write("\u0132\3\2\2\2\u0136\u0138\3\2\2\2\u0137\u0139\5%\23\2")
        buf.write("\u0138\u0137\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u0138\3")
        buf.write("\2\2\2\u013a\u013b\3\2\2\2\u013b\u0142\3\2\2\2\u013c\u013e")
        buf.write("\7c\2\2\u013d\u013f\5%\23\2\u013e\u013d\3\2\2\2\u013f")
        buf.write("\u0140\3\2\2\2\u0140\u013e\3\2\2\2\u0140\u0141\3\2\2\2")
        buf.write("\u0141\u0143\3\2\2\2\u0142\u013c\3\2\2\2\u0142\u0143\3")
        buf.write("\2\2\2\u0143\u0144\3\2\2\2\u0144\u0145\7v\2\2\u0145\u0146")
        buf.write("\7{\2\2\u0146\u0147\7r\2\2\u0147\u0148\7g\2\2\u0148\u014a")
        buf.write("\3\2\2\2\u0149\u014b\7u\2\2\u014a\u0149\3\2\2\2\u014a")
        buf.write("\u014b\3\2\2\2\u014b\u014d\3\2\2\2\u014c\u014e\5%\23\2")
        buf.write("\u014d\u014c\3\2\2\2\u014e\u014f\3\2\2\2\u014f\u014d\3")
        buf.write("\2\2\2\u014f\u0150\3\2\2\2\u0150\u0159\3\2\2\2\u0151\u0152")
        buf.write("\7q\2\2\u0152\u0153\7h\2\2\u0153\u0155\3\2\2\2\u0154\u0156")
        buf.write("\5%\23\2\u0155\u0154\3\2\2\2\u0156\u0157\3\2\2\2\u0157")
        buf.write("\u0155\3\2\2\2\u0157\u0158\3\2\2\2\u0158\u015a\3\2\2\2")
        buf.write("\u0159\u0151\3\2\2\2\u0159\u015a\3\2\2\2\u015aP\3\2\2")
        buf.write("\2\u015b\u015d\5%\23\2\u015c\u015b\3\2\2\2\u015d\u015e")
        buf.write("\3\2\2\2\u015e\u015c\3\2\2\2\u015e\u015f\3\2\2\2\u015f")
        buf.write("\u0165\3\2\2\2\u0160\u0161\7k\2\2\u0161\u0166\7u\2\2\u0162")
        buf.write("\u0163\7c\2\2\u0163\u0164\7t\2\2\u0164\u0166\7g\2\2\u0165")
        buf.write("\u0160\3\2\2\2\u0165\u0162\3\2\2\2\u0166\u0168\3\2\2\2")
        buf.write("\u0167\u0169\5%\23\2\u0168\u0167\3\2\2\2\u0169\u016a\3")
        buf.write("\2\2\2\u016a\u0168\3\2\2\2\u016a\u016b\3\2\2\2\u016b\u0172")
        buf.write("\3\2\2\2\u016c\u016e\7c\2\2\u016d\u016f\5%\23\2\u016e")
        buf.write("\u016d\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u016e\3\2\2\2")
        buf.write("\u0170\u0171\3\2\2\2\u0171\u0173\3\2\2\2\u0172\u016c\3")
        buf.write("\2\2\2\u0172\u0173\3\2\2\2\u0173\u0174\3\2\2\2\u0174\u0175")
        buf.write("\7u\2\2\u0175\u0176\7{\2\2\u0176\u0177\7p\2\2\u0177\u0178")
        buf.write("\7q\2\2\u0178\u0179\7p\2\2\u0179\u017a\7{\2\2\u017a\u017b")
        buf.write("\7o\2\2\u017b\u017d\3\2\2\2\u017c\u017e\7u\2\2\u017d\u017c")
        buf.write("\3\2\2\2\u017d\u017e\3\2\2\2\u017e\u0180\3\2\2\2\u017f")
        buf.write("\u0181\5%\23\2\u0180\u017f\3\2\2\2\u0181\u0182\3\2\2\2")
        buf.write("\u0182\u0180\3\2\2\2\u0182\u0183\3\2\2\2\u0183\u018c\3")
        buf.write("\2\2\2\u0184\u0185\7q\2\2\u0185\u0186\7h\2\2\u0186\u0188")
        buf.write("\3\2\2\2\u0187\u0189\5%\23\2\u0188\u0187\3\2\2\2\u0189")
        buf.write("\u018a\3\2\2\2\u018a\u0188\3\2\2\2\u018a\u018b\3\2\2\2")
        buf.write("\u018b\u018d\3\2\2\2\u018c\u0184\3\2\2\2\u018c\u018d\3")
        buf.write("\2\2\2\u018dR\3\2\2\2\u018e\u0190\t\7\2\2\u018f\u018e")
        buf.write("\3\2\2\2\u0190T\3\2\2\2+\2\u00ac\u00b4\u00b9\u00c0\u00c8")
        buf.write("\u00ce\u00d6\u00dc\u00e3\u00ec\u00f2\u00fb\u00fe\u0102")
        buf.write("\u0106\u010a\u0110\u0117\u011d\u0124\u0129\u012e\u0135")
        buf.write("\u013a\u0140\u0142\u014a\u014f\u0157\u0159\u015e\u0165")
        buf.write("\u016a\u0170\u0172\u017d\u0182\u018a\u018c\u018f\2")
        return buf.getvalue()


class SpudLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    Inlinewhitespacetoken = 18
    Returnwhitespacetoken = 19
    Number = 20
    Namesegment = 21
    And = 22
    Is = 23
    Istype = 24
    Issynonym = 25
    Catchall = 26

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#'", "'//'", "'/*'", "'*/'", "'+'", "'-'", "'$'", "'.'", "'!'", 
            "'@import'", "'@hold'", "'@holdunit'", "'@dec'", "'@frac'", 
            "'@begin'", "'multiply'", "'@end'" ]

    symbolicNames = [ "<INVALID>",
            "Inlinewhitespacetoken", "Returnwhitespacetoken", "Number", 
            "Namesegment", "And", "Is", "Istype", "Issynonym", "Catchall" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "Inlinewhitespace", "Returnwhitespace", 
                  "Uppercase", "Lowercase", "Alpha", "Zero", "Nonzero", 
                  "Numeral", "Nonzerostring", "Decimallarge", "Decimalsmall", 
                  "Decimal", "FractionSimple", "FractionComplex", "Fraction", 
                  "Inlinewhitespacetoken", "Returnwhitespacetoken", "Number", 
                  "Namesegment", "And", "Is", "Istype", "Issynonym", "Catchall" ]

    grammarFileName = "Spud.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


